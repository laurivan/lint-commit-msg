#!/usr/bin/env bash

. "${TEST_FILE_DIR}/common"

before_all() {
    cat > msg.txt <<EOF
DCL-512 Delete redundant SQL tables
EOF
}

# Test that all valid configuration variables pass the validation.
# A simple heuristic for getting the list of all such variables:
# grep -Eoh "LCM_[A-Z0-9_]+" README.md | sort | uniq
test_all_valid_vars() {
    export LCM_BODY_LINE_MAX_LENGTH=72
    export LCM_COLOR=never
    export LCM_IGNORE_2ND_LINE_NOT_BLANK=false
    export LCM_IGNORE_ALL=false
    export LCM_IGNORE_BODY_LINE_TOO_LONG=false
    export LCM_IGNORE_CONTAINS_TABS=false
    export LCM_IGNORE_INVALID_SUBJECT_LINE_PREFIX=false
    export LCM_IGNORE_LINE_COUNT_IS_2=false
    export LCM_IGNORE_MISSING_FINAL_EOL=true
    export LCM_IGNORE_SUBJECT_LINE_ENDS_IN_PERIOD=false
    export LCM_IGNORE_SUBJECT_NOT_CAPITALIZED=false
    export LCM_IGNORE_SUBJECT_LINE_TOO_LONG=false
    export LCM_IGNORE_SUBJECT_LINE_TOO_SHORT=false
    export LCM_IGNORE_SUBJECT_MOOD=false
    export LCM_IGNORE_SUBJECT_NOT_CAPITALIZED=false
    export LCM_IGNORE_TABS=false
    export LCM_IGNORE_TRAILING_WHITESPACE=false
    export LCM_INTERACTIVE=never
    export LCM_SUBJECT_LINE_MAX_LENGTH=50
    export LCM_SUBJECT_LINE_MIN_LENGTH=2
    export LCM_SUBJECT_LINE_PREFIX_HELP="Help"
    export LCM_SUBJECT_LINE_PREFIX_REGEX="DCL-"
    call lint-commit-msg ../msg.txt
    expect_success
}

test_unknown_var() {
    export LCM_NITERACTIVE=always # Misspelled LCM_INTERACTIVE
    call lint-commit-msg ../msg.txt
    expect_user_error
    stdout_contains "ERROR: unrecognized configuration variable: LCM_NITERACTIVE"
}

test_multiple_unknown_vars() {
    # Misspelled variables
    export LCM_NITERACTIVE=always
    export LCM_VOLOR=always
    export LCM_IGNORE_TASB=always
    export lcm_color=always # Wrong case
    call lint-commit-msg ../msg.txt
    expect_user_error
    stdout_contains "unrecognized configuration variable: LCM_NITERACTIVE"
    stdout_contains "unrecognized configuration variable: LCM_VOLOR"
    stdout_contains "unrecognized configuration variable: LCM_IGNORE_TASB"
    stdout_contains "unrecognized configuration variable: lcm_color"
}

test_invalid_ignore_var_value() {
    export LCM_IGNORE_BODY_LINE_TOO_LONG=treu
    call lint-commit-msg ../msg.txt
    expect_user_error
    stdout_contains "ERROR: invalid value, LCM_IGNORE_BODY_LINE_TOO_LONG='treu' (should be true/false)"
}

test_multiple_invalid_values() {
    export LCM_BODY_LINE_MAX_LENGTH=a72
    export LCM_COLOR=nevre
    export LCM_IGNORE_SUBJECT_MOOD=flase
    export LCM_IGNORE_ALL=""
    export LCM_INTERACTIVE=awlays
    export LCM_SUBJECT_LINE_MAX_LENGTH="50 "
    export LCM_SUBJECT_LINE_MIN_LENGTH="-2"
    export LCM_UNKNOWN=

    call lint-commit-msg ../msg.txt
    expect_user_error

    stdout_contains "ERROR: invalid value, LCM_BODY_LINE_MAX_LENGTH='a72' (should be a positive integer)"
    stdout_contains "ERROR: invalid value, LCM_COLOR='nevre' (should be always (aka true), never (aka false), or auto)"
    stdout_contains "ERROR: invalid value, LCM_IGNORE_SUBJECT_MOOD='flase' (should be true/false)"
    stdout_contains "ERROR: invalid value, LCM_IGNORE_ALL='' (should be true/false)"
    stdout_contains "ERROR: invalid value, LCM_INTERACTIVE='awlays' (should be always (aka true), never (aka false), or auto)"
    stdout_contains "ERROR: invalid value, LCM_SUBJECT_LINE_MAX_LENGTH='50 ' (should be a positive integer)"
    stdout_contains "ERROR: invalid value, LCM_SUBJECT_LINE_MIN_LENGTH='-2' (should be a positive integer)"
    stdout_contains "ERROR: unrecognized configuration variable: LCM_UNKNOWN"
    local error_count=$(grep -c "ERROR:" "${STDOUT}")
    local expected_error_count=8
    [ "${error_count}" -eq "${expected_error_count}" ] ||
        fail "Expected ${expected_error_count} errors in stdout, got ${error_count}"
}
